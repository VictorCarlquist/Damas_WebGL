function MoveCamera(camera,keys){	if(keys.isKeyPressed(GLGE.KI_W))	{		camy++;	}	if(keys.isKeyPressed(GLGE.KI_S))	{		camy--;	}	if(keys.isKeyPressed(GLGE.KI_X))	{		caixa.setRotX(1);	}	if(keys.isKeyPressed(GLGE.KI_D))	{		camx--;	}	if(keys.isKeyPressed(GLGE.KI_A))	{		camx++;	}	var raio=80;	var rota;	var inc,incx;	inc=camy/10;	incx=camx/10;		x = Math.sin(incx);	y = Math.cos(inc);	z = Math.cos(incx);	m = Math.pow(Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2),1/2);		camera.setLoc((x/m)*raio,30,(z/m)*raio);	camera.setRotMatrix(lookAt([0,8,0],camera));		}function lookAt(value,pos){		var objpos;        var pos=pos.getPosition();        if(value.getPosition){                objpos=value.getPosition();        }else{                objpos={x:value[0],y:value[1],z:value[2]};        }               var coord=[pos.x-objpos.x,pos.y-objpos.y,pos.z-objpos.z];        var zvec=GLGE.toUnitVec3(coord);        var xvec=GLGE.toUnitVec3(GLGE.crossVec3([0,1,0],zvec));        var yvec=GLGE.toUnitVec3(GLGE.crossVec3(zvec,xvec));                   return (GLGE.Mat4([xvec[0],yvec[0],zvec[0], 0,							   xvec[1],yvec[1],zvec[1], 0,                           xvec[2],yvec[2],zvec[2], 0,                                 0,      0,      0, 1]));}